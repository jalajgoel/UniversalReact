{"version":3,"sources":["server/middleware/offlinePage.js"],"names":["offlinePageMiddleware","req","res","next","locals","nonce","Error","get","err","data","status","send","offlinePageWithNonce","replace"],"mappings":";;;;;kBAYwBA,qB;;AAVxB;;AACA;;AACA;;;;AAEA;;;;;;AAEA;;;;AARA;;AAYe,SAASA,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+C;AAC5D;AACA;AACA,MAAI,OAAOD,IAAIE,MAAJ,CAAWC,KAAlB,KAA4B,QAAhC,EAA0C;AACxC,UAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACD;AACD,QAAMD,QAAQH,IAAIE,MAAJ,CAAWC,KAAzB;;AAEA;AACE;AACA,qBACE,qBAAWE,GAAX,EADF,EAEE,sBAAO,2BAAP,CAFF,EAGE,sBAAO,mCAAP,CAHF,CAFF;AAOE;AACA,SARF;AASE;AACA,GAACC,GAAD,EAAMC,IAAN,KAAe;AACb,QAAID,GAAJ,EAAS;AACPN,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,+BAArB;AACA;AACD;AACD;AACA,UAAMC,uBAAuBH,KAAKI,OAAL,CAAa,gCAAb,EAA+CR,KAA/C,CAA7B;AACA;AACAH,QAAIS,IAAJ,CAASC,oBAAT;AACD,GAnBH;AAqBD","file":"offlinePage.js","sourceRoot":"/home/spineor/Documents/risorso /newSetup_frontend/risorso","sourcesContent":["/* eslint-disable no-unused-vars */\n\nimport { readFile } from 'fs';\nimport { resolve as pathResolve } from 'path';\nimport appRootDir from 'app-root-dir';\n\nimport config from '../../config';\n\n/**\n * Middleware to intercept calls to our offline page to ensure that\n * inline scripts get a nonce value attached to them.\n */\nexport default function offlinePageMiddleware(req, res, next) {\n  // We should have had a nonce provided to us.  See the server/index.js for\n  // more information on what this is.\n  if (typeof res.locals.nonce !== 'string') {\n    throw new Error('A \"nonce\" value has not been attached to the response');\n  }\n  const nonce = res.locals.nonce;\n\n  readFile(\n    // Path to the offline page.\n    pathResolve(\n      appRootDir.get(),\n      config('bundles.client.outputPath'),\n      config('serviceWorker.offlinePageFileName'),\n    ),\n    // Charset for read\n    'utf-8',\n    // Read handler\n    (err, data) => {\n      if (err) {\n        res.status(500).send('Error returning offline page.');\n        return;\n      }\n      // We replace the placeholder with the actual nonce.\n      const offlinePageWithNonce = data.replace('OFFLINE_PAGE_NONCE_PLACEHOLDER', nonce);\n      // Send back the page as the response\n      res.send(offlinePageWithNonce);\n    },\n  );\n}\n"]}