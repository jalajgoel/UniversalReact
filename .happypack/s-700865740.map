{"version":3,"sources":["shared/actions/login_action.js"],"names":["handleLogin","handleLoginError","fetchLogin","handleForgetPassword","fetchForgetPassword","LOGIN","FORGETPASSWORD","ERROR","res","type","payload","err","message","email","password","url","liveURL","dispatch","state","fetch","method","headers","Accept","body","JSON","stringify","then","json","catch"],"mappings":";;;;;;QAMgBA,W,GAAAA,W;QAQAC,gB,GAAAA,gB;QAQAC,U,GAAAA,U;QA0BAC,oB,GAAAA,oB;QAQAC,mB,GAAAA,mB;;AArDhB;;;;;;AAHO,MAAMC,wBAAQ,OAAd;AACA,MAAMC,0CAAiB,gBAAvB;AACA,MAAMC,wBAAQ,OAAd;;;AAGP;AACO,SAASP,WAAT,CAAqBQ,GAArB,EAA0B;AAC/B,SAAO;AACLC,UAAMJ,KADD;AAELK,aAASF;AAFJ,GAAP;AAID;;AAED;AACO,SAASP,gBAAT,CAA0BU,GAA1B,EAA+B;AACpC,SAAO;AACLF,UAAMF,KADD;AAELK,aAASD;AAFJ,GAAP;AAID;;AAED;AACO,SAAST,UAAT,CAAoBW,KAApB,EAA2BC,QAA3B,EAAqC;AAC1C,QAAMN,MAAM;AACVK,SADU;AAEVC;AAFU,GAAZ;AAIA,QAAMC,MAAO,GAAE,oBAAUA,GAAV,CAAcC,OAAQ,YAArC;AACA,SAAO,CAACC,QAAD,EAAWC,KAAX,KACLC,MAAMJ,GAAN,EAAW;AACTK,YAAQ,MADC;AAETC,aAAS;AACPC,cAAQ,oCADD;AAEP,sBAAgB;AAFT,KAFA;AAMTC,UAAMC,KAAKC,SAAL,CAAejB,GAAf;AANG,GAAX,EAQGkB,IARH,CAQQlB,OAAOA,IAAImB,IAAJ,EARf,EASGD,IATH,CASSlB,GAAD,IAAS;AACb,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAOS,SAASjB,YAAYQ,GAAZ,CAAT,CAAP;AACD;AACD,WAAOS,SAAShB,iBAAiBO,GAAjB,CAAT,CAAP;AACD,GAdH,EAeGoB,KAfH,CAeSjB,OAAOM,SAAShB,iBAAiBO,GAAjB,CAAT,CAfhB,CADF;AAiBD;;AAED;AACO,SAASL,oBAAT,CAA8BK,GAA9B,EAAmC;AACxC,SAAO;AACLC,UAAMH,cADD;AAELI,aAASF;AAFJ,GAAP;AAID;;AAED;AACO,SAASJ,mBAAT,CAA6BS,KAA7B,EAAoC;AACzC,QAAML,MAAM;AACVK;AADU,GAAZ;AAGA,SAAO,CAACI,QAAD,EAAWC,KAAX,KACLC,MAAO,GAAE,oBAAUJ,GAAV,CAAcC,OAAQ,sBAA/B,EAAsD;AACpDI,YAAQ,MAD4C;AAEpDC,aAAS;AACPC,cAAQ,oCADD;AAEP,sBAAgB;AAFT,KAF2C;AAMpDC,UAAMC,KAAKC,SAAL,CAAejB,GAAf;AAN8C,GAAtD,EAQGkB,IARH,CAQQlB,OAAOA,IAAImB,IAAJ,EARf,EASGD,IATH,CASSlB,GAAD,IAAS;AACb,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAOS,SAASd,qBAAqBK,GAArB,CAAT,CAAP;AACD;AACD,WAAOS,SAAShB,iBAAiBO,GAAjB,CAAT,CAAP;AACD,GAdH,EAeGoB,KAfH,CAeSjB,OAAOM,SAAShB,iBAAiBO,GAAjB,CAAT,CAfhB,CADF;AAiBD","file":"login_action.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const FORGETPASSWORD = 'FORGETPASSWORD';\nexport const ERROR = 'ERROR';\nimport variables from '../../variables';\n\n// sending received response from backend to reducer function\nexport function handleLogin(res) {\n  return {\n    type: LOGIN,\n    payload: res,\n  };\n}\n\n// to handle error recieved\nexport function handleLoginError(err) {\n  return {\n    type: ERROR,\n    message: err,\n  };\n}\n\n// sending post request to backend for login request\nexport function fetchLogin(email, password) {\n  const res = {\n    email,\n    password,\n  };\n  const url = `${variables.url.liveURL}/api/login`;\n  return (dispatch, state) =>\n    fetch(url, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json , text/plain, */*',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(res),\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          return dispatch(handleLogin(res));\n        }\n        return dispatch(handleLoginError(res));\n      })\n      .catch(err => dispatch(handleLoginError(res)));\n}\n\n// sending forgetpassword data to reducer\nexport function handleForgetPassword(res) {\n  return {\n    type: FORGETPASSWORD,\n    payload: res,\n  };\n}\n\n// sending post request to handle forget password request\nexport function fetchForgetPassword(email) {\n  const res = {\n    email,\n  };\n  return (dispatch, state) =>\n    fetch(`${variables.url.liveURL}/api/forgot_password`, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json , text/plain, */*',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(res),\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          return dispatch(handleForgetPassword(res));\n        }\n        return dispatch(handleLoginError(res));\n      })\n      .catch(err => dispatch(handleLoginError(res)));\n}\n"]}