{"version":3,"sources":["shared/components/QuickCategories.js"],"names":["QuickCategories","props","state","isActive","showYourCollection","changeClassHandle","bind","getCategories","category","getCategoryFilter","data","setState","categories","viewquickCategories_Data","result","length","my","CategoriesMaping","map","_id","cataegoryFilter","title","url","liveURL","category_icon","toggleSidebar","sidebar1","urCollection","quickCategories","mapStateToProps","mapDispatchToProps","dispatch","filter"],"mappings":"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","file":"QuickCategories.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport YourCollection from './YourCollection';\nimport { getQuickCategories_Data } from '../actions/quickCategories_action';\nimport { getCategoryFilter_Data } from '../actions/contentcard_action';\nimport { TrendingTopics } from './TrendingTopics';\nimport variables from '../../variables';\n\nclass QuickCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // to activate css of icon on click iff category has data to show\n      isActive: '',\n\n      // to render YourCollection component--by default quick categories will render\n      showYourCollection: false,\n    };\n    this.changeClassHandle = this.changeClassHandle.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getCategories();\n  }\n\n  // receiving data from redux store to display clicked icon\n  cataegoryFilter(category) {\n    this.props.getCategoryFilter(category);\n  }\n\n  // changes color of clicked icon\n  changeClassHandle(data) {\n    this.setState({ isActive: data });\n  }\n\n  // handler for toggleSidebar event\n  toggleSidebar() {\n    this.setState({ showYourCollection: !this.state.showYourCollection });\n  }\n\n  // quick categories default data\n  quickCategories() {\n    if (this.props.categories.viewquickCategories_Data.result) {\n      if (this.props.categories.viewquickCategories_Data.result.length > 0) {\n        const my = this;\n        var CategoriesMaping = this.props.categories.viewquickCategories_Data.result.map(data =>\n          (<div\n            key={data._id}\n            className={\n              my.state.isActive == data\n                ? 'quick_categories_item border_right hover'\n                : 'quick_categories_item border_right'\n            }\n            onClick={() => {\n              my.cataegoryFilter(data.title);\n            }}\n          >\n            <span\n              onClick={() => {\n                my.changeClassHandle(data);\n              }}\n            >\n              <div className=\"img\" data-toggle=\"tooltip\" data-placement=\"top\" title={data.title}>\n                <img src={variables.url.liveURL + data.category_icon} />\n              </div>\n              <p className=\"text-muted category_title\">\n                {data.title}\n              </p>\n            </span>\n          </div>),\n        );\n      }\n    }\n\n    return (\n      <div className=\"sidebar1\">\n        <div className=\"row no_margin quick-heading\">\n          <div className=\"col-sm-8 no_padding padding_left\">\n            <p className=\"text no_padding\">Quick Categories</p>\n          </div>\n          <div className=\"col-sm-4 quick-icon\">\n            <div className=\"reset\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Turn Button\">\n              <img\n                src=\"../assets/images/sidebar_icons/reset.png\"\n                onClick={this.toggleSidebar.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row1\">\n          {CategoriesMaping}\n        </div>\n      </div>\n    );\n  }\n\n  // YourCollection sidebar data\n  urCollection() {\n    return <YourCollection toggleMe={this.toggleSidebar.bind(this)} />;\n  }\n\n  render() {\n    let sidebar1;\n    if (this.state.showYourCollection) {\n      sidebar1 = this.urCollection();\n    } else {\n      sidebar1 = this.quickCategories();\n    }\n\n    return (\n      <div>\n        {sidebar1}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const categories = state;\n  return { categories };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCategories: () => {\n      dispatch(getQuickCategories_Data());\n    },\n    getCategoryFilter: (filter) => {\n      dispatch(getCategoryFilter_Data(filter));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuickCategories);\n"]}