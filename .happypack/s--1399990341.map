{"version":3,"sources":["shared/actions/contentcard_action.js"],"names":["contentCardSuccess","contentCardError","getContentCard","getCategoryFilter_Data","getTypeFilter","CONTENT","ERROR","res","type","payload","err","message","likeFilter","trendFilter","pageno","url","liveURL","dispatch","state","fetch","method","then","json","content","catch","error","categoryFilter","data","filter","filtered_data"],"mappings":";;;;;;;;;QAQgBA,kB,GAAAA,kB;QAQAC,gB,GAAAA,gB;QAQAC,c,GAAAA,c;QA2BAC,sB,GAAAA,sB;QAiBAC,a,GAAAA,a;;AApEhB;;AACA;;;;AACA;;;;;;AAEO,IAAMC,4BAAU,SAAhB;AACA,IAAMC,wBAAQ,OAAd;;AAEP;AACO,SAASN,kBAAT,CAA4BO,GAA5B,EAAiC;AACtC,SAAO;AACLC,UAAMH,OADD;AAELI,aAASF;AAFJ,GAAP;AAID;;AAED;AACO,SAASN,gBAAT,CAA0BS,GAA1B,EAA+B;AACpC,SAAO;AACLF,UAAMF,KADD;AAELK,aAASD;AAFJ,GAAP;AAID;;AAED;AACO,SAASR,cAAT,CAAwBU,UAAxB,EAAoCC,WAApC,EAAiDC,MAAjD,EAAyD;AAC9D,MAAIC,MAAM,EAAV;AACA,MAAIH,cAAc,KAAd,IAAuBC,eAAe,IAA1C,EAAgD;AAC9CE,UAAS,oBAAUA,GAAV,CAAcC,OAAvB;AACD,GAFD,MAEO,IAAIJ,cAAc,IAAd,IAAsBC,eAAe,KAAzC,EAAgD;AACrDE,UAAS,oBAAUA,GAAV,CAAcC,OAAvB;AACD,GAFM,MAEA,IAAIJ,cAAc,IAAd,IAAsBC,eAAe,IAAzC,EAA+C;AACpDE,UAAS,oBAAUA,GAAV,CAAcC,OAAvB;AACD,GAFM,MAEA;AACLD,UAAS,oBAAUA,GAAV,CAAcC,OAAvB;AACD;AACD,SAAO,UAACC,QAAD,EAAWC,KAAX;AAAA,WACLC,MAAMJ,MAAMD,MAAZ,EAAoB;AAClBM,cAAQ;AADU,KAApB,EAGGC,IAHH,CAGQ;AAAA,aAAOd,IAAIe,IAAJ,EAAP;AAAA,KAHR,EAIGD,IAJH,CAIQ,UAACd,GAAD,EAAS;AACb,UAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,YAAMgB,UAAUhB,IAAIgB,OAApB;AACA,eAAON,SAASjB,mBAAmBuB,OAAnB,CAAT,CAAP;AACD;AACD,aAAON,SAAShB,iBAAiBM,GAAjB,CAAT,CAAP;AACD,KAVH,EAWGiB,KAXH,CAWS;AAAA,aAASP,SAAShB,iBAAiBwB,KAAjB,CAAT,CAAT;AAAA,KAXT,CADK;AAAA,GAAP;AAaD;;AAED;AACO,SAAStB,sBAAT,CAAgCuB,cAAhC,EAAgD;AACrD,SAAO,UAACT,QAAD,EAAWC,KAAX;AAAA,WACLC,MAAS,oBAAUJ,GAAV,CAAcC,OAAvB,aAAsCU,cAAtC,SAA0D;AACxDN,cAAQ;AADgD,KAA1D,EAGGC,IAHH,CAGQ;AAAA,aAAOd,IAAIe,IAAJ,EAAP;AAAA,KAHR,EAIGD,IAJH,CAIQ,UAACd,GAAD,EAAS;AACb,UAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,YAAMoB,OAAOpB,IAAIgB,OAAjB;AACA,eAAON,SAASjB,mBAAmB2B,IAAnB,CAAT,CAAP;AACD;AACD,aAAOV,SAAShB,iBAAiBM,GAAjB,CAAT,CAAP;AACD,KAVH,EAWGiB,KAXH,CAWS;AAAA,aAASP,SAAShB,iBAAiBwB,KAAjB,CAAT,CAAT;AAAA,KAXT,CADK;AAAA,GAAP;AAaD;;AAED;AACO,SAASrB,aAAT,CAAuBwB,MAAvB,EAA+BhB,UAA/B,EAA2CC,WAA3C,EAAwD;AAC7D,MAAIE,MAAM,EAAV;AACA,MAAIa,UAAUhB,cAAc,KAAxB,IAAiCC,eAAe,IAApD,EAA0D;AACxDE,UAAS,oBAAUA,GAAV,CAAcC,OAAvB,+BAAwDY,MAAxD;AACD,GAFD,MAEO,IAAIA,UAAUhB,cAAc,IAAxB,IAAgCC,eAAe,KAAnD,EAA0D;AAC/DE,UAAS,oBAAUA,GAAV,CAAcC,OAAvB,4BAAqDY,MAArD;AACD,GAFM,MAEA,IAAIA,UAAUhB,cAAc,IAAxB,IAAgCC,eAAe,IAAnD,EAAyD;AAC9DE,UAAS,oBAAUA,GAAV,CAAcC,OAAvB,2BAAoDY,MAApD;AACD,GAFM,MAEA;AACLb,UAAS,oBAAUA,GAAV,CAAcC,OAAvB,6BAAsDY,MAAtD;AACD;AACD,SAAO,UAACX,QAAD,EAAWC,KAAX;AAAA,WACLC,MAASJ,GAAT,QAAiB;AACfK,cAAQ;AADO,KAAjB,EAGGC,IAHH,CAGQ;AAAA,aAAOd,IAAIe,IAAJ,EAAP;AAAA,KAHR,EAIGD,IAJH,CAIQ,UAACd,GAAD,EAAS;AACb,UAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,YAAMsB,gBAAgBtB,IAAIgB,OAA1B;AACA,eAAON,SAASjB,mBAAmB6B,aAAnB,CAAT,CAAP;AACD;AACD,aAAOZ,SAAShB,iBAAiBM,GAAjB,CAAT,CAAP;AACD,KAVH,EAWGiB,KAXH,CAWS;AAAA,aAASP,SAAShB,iBAAiBwB,KAAjB,CAAT,CAAT;AAAA,KAXT,CADK;AAAA,GAAP;AAaD;;;;;;;;gCAxFYpB,O;;gCACAC,K;;gCAGGN,kB;;gCAQAC,gB;;gCAQAC,c;;gCA2BAC,sB;;gCAiBAC,a","file":"contentcard_action.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["import 'fetch-everywhere';\nimport store from '../redux/configureStore';\nimport variables from '../../variables';\n\nexport const CONTENT = 'CONTENT';\nexport const ERROR = 'ERROR';\n\n// sending received response from backed to reducer\nexport function contentCardSuccess(res) {\n  return {\n    type: CONTENT,\n    payload: res,\n  };\n}\n\n// to hndle error\nexport function contentCardError(err) {\n  return {\n    type: ERROR,\n    message: err,\n  };\n}\n\n// sorting content cards acc to likes, trends\nexport function getContentCard(likeFilter, trendFilter, pageno) {\n  let url = '';\n  if (likeFilter == false && trendFilter == true) {\n    url = `${variables.url.liveURL}/api/articles/trending/`;\n  } else if (likeFilter == true && trendFilter == false) {\n    url = `${variables.url.liveURL}/api/articles/likes/`;\n  } else if (likeFilter == true && trendFilter == true) {\n    url = `${variables.url.liveURL}/api/articles/both/`;\n  } else {\n    url = `${variables.url.liveURL}/api/articles/latest/`;\n  }\n  return (dispatch, state) =>\n    fetch(url + pageno, {\n      method: 'get',\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          const content = res.content;\n          return dispatch(contentCardSuccess(content));\n        }\n        return dispatch(contentCardError(res));\n      })\n      .catch(error => dispatch(contentCardError(error)));\n}\n\n// receiving content data for quickCategories from backend\nexport function getCategoryFilter_Data(categoryFilter) {\n  return (dispatch, state) =>\n    fetch(`${variables.url.liveURL}/api/${categoryFilter}/1`, {\n      method: 'get',\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          const data = res.content;\n          return dispatch(contentCardSuccess(data));\n        }\n        return dispatch(contentCardError(res));\n      })\n      .catch(error => dispatch(contentCardError(error)));\n}\n\n// receiving content data for dropdown\nexport function getTypeFilter(filter, likeFilter, trendFilter) {\n  let url = '';\n  if (filter && likeFilter == false && trendFilter == true) {\n    url = `${variables.url.liveURL}/api/articles/trending/${filter}/`;\n  } else if (filter && likeFilter == true && trendFilter == false) {\n    url = `${variables.url.liveURL}/api/articles/likes/${filter}/`;\n  } else if (filter && likeFilter == true && trendFilter == true) {\n    url = `${variables.url.liveURL}/api/articles/both/${filter}/`;\n  } else {\n    url = `${variables.url.liveURL}/api/articles/latest/${filter}/`;\n  }\n  return (dispatch, state) =>\n    fetch(`${url}1`, {\n      method: 'get',\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          const filtered_data = res.content;\n          return dispatch(contentCardSuccess(filtered_data));\n        }\n        return dispatch(contentCardError(res));\n      })\n      .catch(error => dispatch(contentCardError(error)));\n}\n"]}