{"version":3,"sources":["shared/components/Login.js"],"names":["Login","props","state","email","password","showForgetPassword","message","email_msg","password_msg","reg","test","length","isEnabled","e","setState","target","value","pswd","numbers","preventDefault","fetchLogin","name","fetchForgetPassword","canBeSubmited","token","logindata","response","cookie_token","cookies","undefined","set","path","res_received","login","bind","handleEmailInput","handlePasswordInput","forgetPassword","fp_submit","handleForgetPassword","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Login.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { fetchLogin, fetchForgetPassword } from '../actions/login_action';\nimport { Redirect } from 'react-router-dom';\n// import Profile from './Profile'\n// import App from './App';\n\n// import { instanceOf } from 'prop-types';\n// import { withCookies, Cookies } from 'react-cookie';\nimport Cookies from 'universal-cookie';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      showForgetPassword: false,\n      message: '',\n      email_msg: '',\n      password_msg: '',\n    };\n  }\n  componentWillMount() {}\n  canBeSubmited() {\n    const { email, password } = this.state;\n\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (email == ' ' && password == ' ') {\n      return false;\n    }\n    if (reg.test(email) && password.length == 4) {\n      return true;\n    }\n    const isEnabled = false;\n    return isEnabled;\n  }\n\n  // handler for email\n  handleEmailInput(e) {\n    this.setState({ email: e.target.value });\n    const email = e.target.value;\n    // for email error message\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email)) {\n      this.setState({ email_msg: ' ' });\n      this.setState({ email });\n    } else {\n      this.setState({ email_msg: 'Enter valid email e.g. example@example.com' });\n    }\n  }\n\n  handlePasswordInput(e) {\n    this.setState({ password: e.target.value });\n    const pswd = e.target.value;\n\n    // for password error message\n    const numbers = /^[0-9]+$/;\n\n    // let pswd= this.state.password\n    if (!(pswd.length == 4)) {\n      this.setState({ password_msg: 'Incorrect password' });\n    } else if (!numbers.test(this.state.password)) {\n      this.setState({ password_msg: 'Incorrect password' });\n    } else {\n      this.setState({ password_msg: ' ' });\n      this.setState({ password: pswd });\n    }\n  }\n\n  login(e) {\n    e.preventDefault();\n    const email = this.state.email;\n    const password = this.state.password;\n\n    this.props.fetchLogin(email, password);\n\n    // to reset  input fields\n    this.setState({ email: '', password: '' });\n  }\n\n  forgetPassword() {\n    this.setState({ showForgetPassword: !this.state.showForgetPassword });\n  }\n\n  handleForgetPassword(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  fp_submit(e) {\n    e.preventDefault();\n    const email = this.state;\n    this.props.fetchForgetPassword(this.state.email);\n  }\n\n  render() {\n    const isEnabled = this.canBeSubmited();\n    const token = this.props.logindata.fetchLogin.response.token;\n    const cookie_token = this.props.logindata.fetchLogin.response.token;\n    const cookies = new Cookies();\n    if (!(token == undefined)) {\n      cookies.set('risorsoLoggedIn', token, { path: '/' });\n    }\n\n    // document.cookie= \"loggedIn_token=\"+token\n    // var x= document.cookie\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n\n    let res_received;\n    if (this.props.logindata.fetchLogin.response.message) {\n      res_received = (\n        <span className=\"response\">\n          {this.props.logindata.fetchLogin.response.message}\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"login_section\">\n        <div className=\"login_img\">\n          <span className=\"login_text\">Log In</span>\n          <img src=\"../assets/images/login/login.png\" alt=\"login_img\" />\n        </div>\n        <div className=\"login_input\">\n          <form onSubmit={this.login.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"user_inputs_login form-control password_note\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleEmailInput.bind(this)}\n              />\n              <span className=\"errorMessage\">\n                {this.state.email_msg}\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"user_inputs_login form-control password_note\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.handlePasswordInput.bind(this)}\n                maxLength=\"4\"\n              />\n              <span className=\"errorMessage\">\n                {}\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <span>\n                <a onClick={this.forgetPassword.bind(this)}>Forgot password?</a>\n              </span>\n            </div>\n            <div className=\"form-group text-right\">\n              <input\n                type=\"submit\"\n                name=\"Login_submit\"\n                value=\"Log In\"\n                className={isEnabled == true ? 'submit_button' : 'IMDisabled'}\n                disabled={!isEnabled}\n              />\n            </div>\n          </form>\n          {res_received}\n        </div>\n        <div className={this.state.showForgetPassword == false ? 'hide-modal' : 'modal'}>\n          <div className=\"modal-content\">\n            <form onSubmit={this.fp_submit.bind(this)}>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Enter Registered Your Email\"\n                  value={this.state.email}\n                  onChange={this.handleForgetPassword.bind(this)}\n                />\n              </div>\n              <div className=\"form-group text-right\">\n                <input type=\"submit\" name=\"fp_submit\" value=\"Send\" className=\"submit_button\" />\n                <button\n                  className=\"submit_button close_btn\"\n                  onClick={this.forgetPassword.bind(this)}\n                >\n                  Close\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const logindata = state;\n  return { logindata };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    fetchLogin: (email, password) => {\n      dispatch(fetchLogin(email, password));\n    },\n    fetchForgetPassword: (email) => {\n      dispatch(fetchForgetPassword(email));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]}