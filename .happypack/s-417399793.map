{"version":3,"sources":["client/registerServiceWorker.js"],"names":["process","env","BUILD_FLAG_IS_DEV","OfflinePluginRuntime","require","install","onUpdating","undefined","onUpdateReady","applyUpdate","onUpdated","window","location","reload","onUpdateFailed"],"mappings":";;AAUA;;;;;;AAEA,IAAIA,QAAQC,GAAR,CAAYC,iBAAZ,KAAkC,OAAtC,EAA+C;AAC7C;AACA;AACA,MAAI,sBAAO,uBAAP,CAAJ,EAAqC;AACnC;AACA,QAAMC,uBAAuBC,QAAQ,wBAAR,CAA7B;;AAEA;AACA;AACAD,yBAAqBE,OAArB,CAA6B;AAC3BC,kBAAY;AAAA,eAAMC,SAAN;AAAA,OADe;AAE3B;AACAC,qBAAe;AAAA,eAAML,qBAAqBM,WAArB,EAAN;AAAA,OAHY;AAI3B;AACA;AACA;AACAC,iBAAW;AAAA,eAAMC,OAAOC,QAAP,CAAgBC,MAAhB,EAAN;AAAA,OAPgB;AAQ3BC,sBAAgB;AAAA,eAAMP,SAAN;AAAA;AARW,KAA7B;AAUD;AACF,C,CAhCD","file":"registerServiceWorker.js","sourceRoot":"/home/spineor/Documents/risorso /newSetup_frontend/risorso","sourcesContent":["/**\n * We use the offline-plugin to generate a service worker.  See the webpack\n * config for more details.\n *\n * We need to ensure that the runtime is installed so that the generated\n * service worker is executed.\n *\n * NOTE: We only enable the service worker for non-development environments.\n */\n\nimport config from '../config';\n\nif (process.env.BUILD_FLAG_IS_DEV === 'false') {\n  // We check the shared config, ensuring that the service worker has been\n  // enabled.\n  if (config('serviceWorker.enabled')) {\n    // eslint-disable-next-line global-require\n    const OfflinePluginRuntime = require('offline-plugin/runtime');\n\n    // Install the offline plugin, which instantiates our service worker and app\n    // cache to support precaching of assets and offline support.\n    OfflinePluginRuntime.install({\n      onUpdating: () => undefined,\n      // When an update is ready we will tell the new SW to take control immediately.\n      onUpdateReady: () => OfflinePluginRuntime.applyUpdate(),\n      // After the new SW update has been applied we will reload the users page\n      // to ensure they are using the latest assets.\n      // This only gets run if there were updates available for our cached assets.\n      onUpdated: () => window.location.reload(),\n      onUpdateFailed: () => undefined,\n    });\n  }\n}\n"]}