{"version":3,"sources":["shared/components/DemoApp/AsyncCounterRoute/CounterRoute.js"],"names":["CounterRoute","constructor","props","incrementCounter","bind","state","counter","setState","render"],"mappings":";;;;;6IAAA;;AACA;;;;;;AAEA,MAAMA,YAAN,0BAAqC;AACnCC,cAAYC,KAAZ,EAAmB;AACjB,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,KAAL,GAAa,EAAEC,SAAS,CAAX,EAAb;AACD;;AAEDH,qBAAmB;AACjB,SAAKI,QAAL,CAAc,EAAED,SAAS,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAAhC,EAAd;AACD;;AAEDE,WAAS;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAFF;AAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkB,aAAKH,KAAL,CAAWC;AAD7B,OARF;AAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,YAAQ,SAAS,KAAKH,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAXF,KADF;AAiBD;AA7BkC;;kBAgCtBH,Y","file":"CounterRoute.js","sourceRoot":"/home/spineor/Documents/risorso /newSetup_frontend/risorso","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React, { Component } from 'react';\n\nclass CounterRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.state = { counter: 0 };\n  }\n\n  incrementCounter() {\n    this.setState({ counter: this.state.counter + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Counter</h3>\n        <p>\n          <em>\n            This is a small demo component that contains state.  It's useful for\n            testing the hot reloading experience of an asyncComponent.\n          </em>\n        </p>\n        <p>\n          Current value: {this.state.counter}\n        </p>\n        <p>\n          <button onClick={this.incrementCounter}>Increment</button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default CounterRoute;\n"]}