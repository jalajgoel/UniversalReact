{"version":3,"sources":["shared/components/SignUp.js"],"names":["SignUp","constructor","props","state","email","password","message","email_msg","password_msg","response","handleEmailInput","e","setState","target","value","reg","test","handlePasswordInput","pswd","numbers","length","canBeSubmited","isEnabled","handleSignUp","preventDefault","signup_data","fetchSignup","render","res_received","signupdata","fetchSignUp","bind","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"SignUp.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\nimport { fetchSignup } from '../actions/signup_action';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      message: '',\n      email_msg: '',\n      password_msg: '',\n      response: '',\n    };\n  }\n\n  // handler for email. giving messages below email input if email is not valid input\n  handleEmailInput(e) {\n    this.setState({ email: e.target.value });\n    const email = e.target.value;\n    // for email error message\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email)) {\n      this.setState({ email_msg: ' ' });\n      this.setState({ email });\n    } else {\n      this.setState({ email_msg: 'Enter valid email e.g. example@example.com' });\n    }\n  }\n\n  // handler for password. giving messages below password\n  // if password is not of 4 digits and it must be numeric\n  handlePasswordInput(e) {\n    this.setState({ password: e.target.value });\n    const pswd = e.target.value;\n    // for password error message\n    const numbers = /^[0-9]+$/;\n    // let pswd= this.state.password\n\n    if (!(pswd.length == 4)) {\n      this.setState({\n        password_msg: 'Could be 4 digits, easy password You might need to change it later tough',\n      });\n    } else if (!numbers.test(this.state.password)) {\n      this.setState({ password_msg: 'Password must be numeric!' });\n    } else {\n      this.setState({ password_msg: ' ' });\n      this.setState({ password: pswd });\n    }\n  }\n\n  /* for disabling submit button if input fiels are empty--\nemail is not a valid input --password is not numeric and  of 4 digits */\n  canBeSubmited() {\n    const { email, password } = this.state;\n\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const numbers = /^[0-9]+$/;\n    if (email == ' ' && password == ' ') {\n      return false;\n    }\n    if (reg.test(email) && password.length == 4 && numbers.test(password)) {\n      return true;\n    }\n    const isEnabled = false;\n    return isEnabled;\n  }\n\n  // handling signup request. called when submit button is clicked.\n  handleSignUp(e) {\n    e.preventDefault();\n    const signup_data = this.state;\n\n    const email = this.state.email;\n    const password = this.state.password;\n    // sending received data i.e. email and password to redux action so as to send to backend server\n    this.props.fetchSignup(email, password);\n\n    // to reset  input fields\n    this.setState({ email: '', password: '' });\n  }\n\n  render() {\n    const isEnabled = this.canBeSubmited();\n    let res_received;\n    if (this.props.signupdata.fetchSignUp.response.message) {\n      res_received = (\n        <span className=\"response\">\n          {this.props.signupdata.fetchSignUp.response.message}\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"signUp_section\">\n        <div className=\"signUp_img\">\n          <span className=\"signup_text\">Sign Up</span>\n          <img src=\"../assets/images/login/signup.png\" alt=\"signUp_img\" />\n        </div>\n        <div className=\"signUp_input\">\n          <form onSubmit={this.handleSignUp.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"user_inputs_signup form-control password_note\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleEmailInput.bind(this)}\n              />\n              <span className=\"errorMessage\">\n                {this.state.email_msg}\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"user_inputs_signup form-control password_note\"\n                placeholder=\"Password\"\n                maxLength=\"4\"\n                value={this.state.password}\n                onChange={this.handlePasswordInput.bind(this)}\n              />\n              <span className=\"errorMessage\">\n                {this.state.password_msg}\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <span>\n                <a>Terms and Conditions</a>\n              </span>\n            </div>\n\n            <div className=\"form-group text-right\">\n              <input\n                type=\"submit\"\n                name=\"SignUp\"\n                value=\"Sign Up\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title=\"SignUp\"\n                className={isEnabled == true ? 'submit_button' : 'IMDisabled'}\n                disabled={!isEnabled}\n              />\n            </div>\n          </form>\n          {res_received}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const signupdata = state;\n  return { signupdata };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    fetchSignup: (email, password) => {\n      dispatch(fetchSignup(email, password));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"]}