{"version":3,"sources":["server/middleware/errorHandlers.js"],"names":["prettyError","require","start","skipNodeFiles","skipPackage","errorHandlersMiddleware","notFoundMiddlware","req","res","next","status","send","unexpectedErrorMiddleware","err","console","log","render"],"mappings":";;;;;AAAA;AACA;;AAEA,MAAMA,cAAcC,QAAQ,cAAR,EAAwBC,KAAxB,EAApB;;AAEA;;AAEA;AACAF,YAAYG,aAAZ;;AAEA;AACAH,YAAYI,WAAZ,CAAwB,SAAxB;;AAEA,MAAMC,0BAA0B;AAC9B;;;;;;;AAOA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AACzCD,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAArB;AACD,CAV6B;;AAY9B;;;;;;AAMA,SAASC,yBAAT,CAAmCC,GAAnC,EAAwCN,GAAxC,EAA6CC,GAA7C,EAAkDC,IAAlD,EAAwD;AACtD,MAAII,GAAJ,EAAS;AACPC,YAAQC,GAAR,CAAYf,YAAYgB,MAAZ,CAAmBH,GAAnB,CAAZ;AACD;AACDL,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sCAArB;AACD,CAvB6B,CAAhC;;kBA0BeN,uB","file":"errorHandlers.js","sourceRoot":"/home/spineor/Documents/risorso /newSetup_frontend/react-universally","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n\nconst prettyError = require('pretty-error').start();\n\n// Configure prettyError to simplify the stack trace:\n\n// skip events.js and http.js and similar core node files\nprettyError.skipNodeFiles();\n\n// skip all the trace lines about express` core and sub-modules\nprettyError.skipPackage('express');\n\nconst errorHandlersMiddleware = [\n  /**\n   * 404 errors middleware.\n   *\n   * NOTE: the react application middleware hands 404 paths, but it is good to\n   * have this backup for paths not handled by the react middleware. For\n   * example you may bind a /api path to express.\n   */\n  function notFoundMiddlware(req, res, next) {\n    res.status(404).send('Sorry, that resource was not found.');\n  },\n\n  /**\n   * 500 errors middleware.\n   *\n   * NOTE: You must provide specify all 4 parameters on this callback function\n   * even if they aren't used, otherwise it won't be used.\n   */\n  function unexpectedErrorMiddleware(err, req, res, next) {\n    if (err) {\n      console.log(prettyError.render(err));\n    }\n    res.status(500).send('Sorry, an unexpected error occurred.');\n  },\n];\n\nexport default errorHandlersMiddleware;\n"]}