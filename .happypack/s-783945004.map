{"version":3,"sources":["server/middleware/reactApplication/ServerHTML.js"],"names":["KeyedComponent","children","only","clientEntryAssets","stylesheetTag","stylesheetFilePath","scriptTag","jsFilePath","ServerHTML","props","asyncComponentsState","helmet","jobsState","nonce","reactAppString","routerState","storeState","inlineScript","body","__html","headerElements","title","toComponent","base","meta","link","css","style","bodyElements","join","process","env","BUILD_FLAG_IS_DEV","Date","now","js","script","htmlAttributes","map","x","idx","propTypes","object","string"],"mappings":"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","file":"ServerHTML.js","sourceRoot":"/home/spineor/risorso","sourcesContent":["/**\n * This module is responsible for generating the HTML page response for\n * the react application middleware.\n */\n\n/* eslint-disable react/no-danger */\n/* eslint-disable react/no-array-index-key */\n\nimport React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport serialize from 'serialize-javascript';\n\nimport config from '../../../config';\nimport ifElse from '../../../shared/utils/logic/ifElse';\nimport removeNil from '../../../shared/utils/arrays/removeNil';\nimport getClientBundleEntryAssets from './getClientBundleEntryAssets';\n\nimport ClientConfig from '../../../config/components/ClientConfig';\nimport HTML from '../../../shared/components/HTML';\n\n// PRIVATES\n\nfunction KeyedComponent({ children }) {\n  return Children.only(children);\n}\n\n// Resolve the assets (js/css) for the client bundle's entry chunk.\nconst clientEntryAssets = getClientBundleEntryAssets();\n\nfunction stylesheetTag(stylesheetFilePath) {\n  return (\n    <link href={stylesheetFilePath} media=\"screen, projection\" rel=\"stylesheet\" type=\"text/css\" />\n  );\n}\n\nfunction scriptTag(jsFilePath) {\n  return <script type=\"text/javascript\" src={jsFilePath} />;\n}\n\n// COMPONENT\n\nfunction ServerHTML(props) {\n  const {\n    asyncComponentsState,\n    helmet,\n    jobsState,\n    nonce,\n    reactAppString,\n    routerState,\n    storeState,\n  } = props;\n\n  // Creates an inline script definition that is protected by the nonce.\n  const inlineScript = body =>\n    <script nonce={nonce} type=\"text/javascript\" dangerouslySetInnerHTML={{ __html: body }} />;\n\n  const headerElements = removeNil([\n    ...ifElse(helmet)(() => helmet.title.toComponent(), []),\n    ...ifElse(helmet)(() => helmet.base.toComponent(), []),\n    ...ifElse(helmet)(() => helmet.meta.toComponent(), []),\n    ...ifElse(helmet)(() => helmet.link.toComponent(), []),\n    ifElse(clientEntryAssets && clientEntryAssets.css)(() => stylesheetTag(clientEntryAssets.css)),\n    ...ifElse(helmet)(() => helmet.style.toComponent(), []),\n  ]);\n\n  const bodyElements = removeNil([\n    // Bind our redux store state so the client knows how to hydrate his one\n    ifElse(storeState)(() => inlineScript(`window.__APP_STATE__=${serialize(storeState)};`)),\n\n    // Binds the client configuration object to the window object so\n    // that we can safely expose some configuration values to the\n    // client bundle that gets executed in the browser.\n    <ClientConfig nonce={nonce} />,\n\n    // Bind our async components state so the client knows which ones\n    // to initialise so that the checksum matches the server response.\n    // @see https://github.com/ctrlplusb/react-async-component\n    ifElse(asyncComponentsState)(() =>\n      inlineScript(\n        `window.__ASYNC_COMPONENTS_REHYDRATE_STATE__=${serialize(asyncComponentsState)};`,\n      ),\n    ),\n\n    ifElse(jobsState)(() => inlineScript(`window.__JOBS_STATE__=${serialize(jobsState)}`)),\n\n    ifElse(routerState)(() => inlineScript(`window.__ROUTER_STATE__=${serialize(routerState)}`)),\n\n    // Enable the polyfill io script?\n    // This can't be configured within a react-helmet component as we\n    // may need the polyfill's before our client JS gets parsed.\n    ifElse(config('polyfillIO.enabled'))(() =>\n      scriptTag(`${config('polyfillIO.url')}?features=${config('polyfillIO.features').join(',')}`),\n    ),\n    // When we are in development mode our development server will\n    // generate a vendor DLL in order to dramatically reduce our\n    // compilation times.  Therefore we need to inject the path to the\n    // vendor dll bundle below.\n    ifElse(\n      process.env.BUILD_FLAG_IS_DEV === 'true' && config('bundles.client.devVendorDLL.enabled'),\n    )(() =>\n      scriptTag(\n        `${config('bundles.client.webPath')}${config(\n          'bundles.client.devVendorDLL.name',\n        )}.js?t=${Date.now()}`,\n      ),\n    ),\n    ifElse(clientEntryAssets && clientEntryAssets.js)(() => scriptTag(clientEntryAssets.js)),\n    ...ifElse(helmet)(() => helmet.script.toComponent(), []),\n  ]);\n\n  return (\n    <HTML\n      htmlAttributes={ifElse(helmet)(() => helmet.htmlAttributes.toComponent(), null)}\n      headerElements={headerElements.map((x, idx) =>\n        (<KeyedComponent key={idx}>\n          {x}\n        </KeyedComponent>),\n      )}\n      bodyElements={bodyElements.map((x, idx) =>\n        (<KeyedComponent key={idx}>\n          {x}\n        </KeyedComponent>),\n      )}\n      appBodyString={reactAppString}\n    />\n  );\n}\n\nServerHTML.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  asyncComponentsState: PropTypes.object,\n  // eslint-disable-next-line react/forbid-prop-types\n  helmet: PropTypes.object,\n  // eslint-disable-next-line react/forbid-prop-types\n  jobsState: PropTypes.object,\n  nonce: PropTypes.string,\n  reactAppString: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  routerState: PropTypes.object,\n  // eslint-disable-next-line react/forbid-prop-types\n  storeState: PropTypes.object,\n};\n\n// EXPORT\n\nexport default ServerHTML;\n"]}