{"version":3,"sources":["shared/components/Login.js"],"names":["Login","constructor","props","state","email","password","showForgetPassword","message","email_msg","password_msg","componentWillMount","canBeSubmited","reg","test","length","isEnabled","handleEmailInput","e","setState","target","value","handlePasswordInput","pswd","numbers","login","preventDefault","fetchLogin","forgetPassword","handleForgetPassword","name","fp_submit","fetchForgetPassword","render","token","logindata","response","cookie_token","cookies","undefined","set","path","res_received","bind","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Login.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { fetchLogin, fetchForgetPassword } from '../actions/login_action';\nimport { Redirect } from 'react-router-dom';\n// import Profile from './Profile'\n// import App from './App';\n\n// import { instanceOf } from 'prop-types';\n// import { withCookies, Cookies } from 'react-cookie';\nimport Cookies from 'universal-cookie';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      showForgetPassword: false,\n      message: '',\n      email_msg: '',\n      password_msg: '',\n    };\n  }\n  componentWillMount() {}\n  canBeSubmited() {\n    const { email, password } = this.state;\n\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (email == ' ' && password == ' ') {\n      return false;\n    }\n    if (reg.test(email) && password.length == 4) {\n      return true;\n    }\n    const isEnabled = false;\n    return isEnabled;\n  }\n\n  // handler for email\n  handleEmailInput(e) {\n    this.setState({ email: e.target.value });\n    const email = e.target.value;\n    // for email error message\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email)) {\n      this.setState({ email_msg: ' ' });\n      this.setState({ email });\n    } else {\n      this.setState({ email_msg: 'Enter valid email e.g. example@example.com' });\n    }\n  }\n\n  handlePasswordInput(e) {\n    this.setState({ password: e.target.value });\n    const pswd = e.target.value;\n\n    // for password error message\n    const numbers = /^[0-9]+$/;\n\n    // let pswd= this.state.password\n    if (!(pswd.length == 4)) {\n      this.setState({ password_msg: 'Incorrect password' });\n    } else if (!numbers.test(this.state.password)) {\n      this.setState({ password_msg: 'Incorrect password' });\n    } else {\n      this.setState({ password_msg: ' ' });\n      this.setState({ password: pswd });\n    }\n  }\n\n  login(e) {\n    e.preventDefault();\n    const email = this.state.email;\n    const password = this.state.password;\n\n    this.props.fetchLogin(email, password);\n\n    // to reset  input fields\n    this.setState({ email: '', password: '' });\n  }\n\n  forgetPassword() {\n    this.setState({ showForgetPassword: !this.state.showForgetPassword });\n  }\n\n  handleForgetPassword(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  fp_submit(e) {\n    e.preventDefault();\n    const email = this.state;\n    this.props.fetchForgetPassword(this.state.email);\n  }\n\n  render() {\n    const isEnabled = this.canBeSubmited();\n    const token = this.props.logindata.fetchLogin.response.token;\n    const cookie_token = this.props.logindata.fetchLogin.response.token;\n    const cookies = new Cookies();\n    if (!(token == undefined)) {\n      cookies.set('risorsoLoggedIn', token, { path: '/' });\n    }\n\n    // document.cookie= \"loggedIn_token=\"+token\n    // var x= document.cookie\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n\n    let res_received;\n    if (this.props.logindata.fetchLogin.response.message) {\n      res_received = (\n        <span className=\"response\">\n          {this.props.logindata.fetchLogin.response.message}\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"login_section\">\n        <div className=\"login_img\">\n          <span className=\"login_text\">Log In</span>\n          <img src=\"../assets/images/login/login.png\" alt=\"login_img\" />\n        </div>\n        <div className=\"login_input\">\n          <form onSubmit={this.login.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"user_inputs_login form-control password_note\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleEmailInput.bind(this)}\n              />\n              <span className=\"errorMessage\">\n                {this.state.email_msg}\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"user_inputs_login form-control password_note\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.handlePasswordInput.bind(this)}\n                maxLength=\"4\"\n              />\n              <span className=\"errorMessage\">\n                {}\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <span>\n                <a onClick={this.forgetPassword.bind(this)}>Forgot password?</a>\n              </span>\n            </div>\n            <div className=\"form-group text-right\">\n              <input\n                type=\"submit\"\n                name=\"Login_submit\"\n                value=\"Log In\"\n                className={isEnabled == true ? 'submit_button' : 'IMDisabled'}\n                disabled={!isEnabled}\n              />\n            </div>\n          </form>\n          {res_received}\n        </div>\n        <div className={this.state.showForgetPassword == false ? 'hide-modal' : 'modal'}>\n          <div className=\"modal-content\">\n            <form onSubmit={this.fp_submit.bind(this)}>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Enter Registered Your Email\"\n                  value={this.state.email}\n                  onChange={this.handleForgetPassword.bind(this)}\n                />\n              </div>\n              <div className=\"form-group text-right\">\n                <input type=\"submit\" name=\"fp_submit\" value=\"Send\" className=\"submit_button\" />\n                <button\n                  className=\"submit_button close_btn\"\n                  onClick={this.forgetPassword.bind(this)}\n                >\n                  Close\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const logindata = state;\n  return { logindata };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    fetchLogin: (email, password) => {\n      dispatch(fetchLogin(email, password));\n    },\n    fetchForgetPassword: (email) => {\n      dispatch(fetchForgetPassword(email));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]}