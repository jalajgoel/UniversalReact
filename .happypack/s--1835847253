'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _reactHelmet = require('react-helmet');

var _reactHelmet2 = _interopRequireDefault(_reactHelmet);

var _contentcard_action = require('../actions/contentcard_action');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ContentCard = function (_Component) {
	_inherits(ContentCard, _Component);

	function ContentCard(props) {
		_classCallCheck(this, ContentCard);

		return _possibleConstructorReturn(this, (ContentCard.__proto__ || Object.getPrototypeOf(ContentCard)).call(this, props));
	}

	_createClass(ContentCard, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			this.props.getContentCard();
		}
	}, {
		key: 'render',
		value: function render() {
			var obj;
			if (this.props.contentdata.viewContentCard.result) {
				if (this.props.contentdata.viewContentCard.result.length > 0) {
					if (this.props.like) {

						obj = this.props.contentdata.viewContentCard.result.sort(function (a, b) {
							return a.likes < b.likes;
						});
					}
					if (this.props.trend) {
						obj = this.props.contentdata.viewContentCard.result.sort(function (a, b) {
							return a.trending < b.trending;
						});
					} else {
						obj = this.props.contentdata.viewContentCard.result;
					}
					var my = this;
					var contentMapping = obj.map(function (data) {

						return _jsx('div', {
							className: my.props.layout3 == true || my.props.layout4 == false ? "col-xs-6 col-sm-6 col-md-4 col-lg-4 no_padding padding_left" : my.props.layout4 == true || my.props.layout3 == false ? "col-xs-6 col-sm-6 col-md-3 col-lg-3 no_padding padding_left" : "col-xs-6 col-sm-6 col-md-4 col-lg-4 no_padding padding_left"
						}, data.id, _jsx('div', {
							className: 'panel content-card'
						}, void 0, _jsx('img', {
							className: 'img-responsive card-image',
							src: data.image,
							alt: 'content card img'
						}), _jsx('div', {
							className: 'panel-body'
						}, void 0, _jsx('div', {
							className: 'content-card-section1'
						}, void 0, _jsx('div', {
							className: 'content-card-title'
						}, void 0, _jsx('p', {}, void 0, data.channel, ', ', _jsx('span', {
							className: 'text-muted'
						}, void 0, data.timePublished))), _jsx('div', {
							className: 'content-card-info'
						}, void 0, _jsx('a', {}, void 0, _jsx('h3', {}, void 0, data.contentTitle)), _jsx('p', {
							className: 'text-muted'
						}, void 0, data.contentDiscription))), _jsx('div', {
							className: 'content-card-section2'
						}, void 0, _jsx('ul', {}, void 0, _jsx('li', {}, void 0, _jsx('img', {
							src: data.logo,
							'data-toggle': 'tooltip',
							'data-placement': 'top',
							title: 'Channel Logo'
						})), _jsx('li', {}, void 0, _jsx('img', {
							src: data.divider
						})), _jsx('li', {}, void 0, _jsx('img', {
							src: data.quickCategory,
							'data-toggle': 'tooltip',
							'data-placement': 'top',
							title: 'Quick Category'
						})), _jsx('li', {}, void 0, _jsx('img', {
							src: data.divider
						})), _jsx('li', {}, void 0, _jsx('img', {
							src: data.contentType,
							'data-toggle': 'tooltip',
							'data-placement': 'top',
							title: 'Content Type'
						})))), _jsx('div', {
							className: 'content-card-footer'
						}, void 0, _jsx('ul', {}, void 0, _jsx('li', {}, void 0, _jsx('i', {
							className: 'ico-icon42 footer-icons',
							'aria-hidden': 'true',
							'data-toggle': 'tooltip',
							'data-placement': 'top',
							title: 'Trending'
						}), _jsx('span', {
							className: 'text-muted'
						}, void 0, data.trending)), _jsx('li', {}, void 0, _jsx('img', {
							src: '../assets/images/content-card/property-divider.png',
							alt: 'card-footer items'
						})), _jsx('li', {}, void 0, _jsx('i', {
							className: 'ico-icon44 footer-icons text-muted',
							'aria-hidden': 'true',
							'data-toggle': 'tooltip',
							'data-placement': 'top',
							title: 'Comments'
						}), _jsx('span', {
							className: 'text-muted'
						}, void 0, data.comments)), _jsx('li', {}, void 0, _jsx('img', {
							src: '../assets/images/content-card/property-divider.png',
							alt: 'card-footer items'
						})), _jsx('li', {}, void 0, _jsx('i', {
							className: 'ico-icon43 footer-icons text-muted',
							'aria-hidden': 'true',
							'data-toggle': 'tooltip',
							'data-placement': 'top',
							title: 'Likes'
						}), _jsx('span', {
							className: 'text-muted'
						}, void 0, data.likes)))))));
					});
				}
			}

			return _jsx('div', {}, void 0, contentMapping);
		}
	}]);

	return ContentCard;
}(_react.Component);

function mapStateToProps(state) {
	var contentdata = state;
	return { contentdata: contentdata };
}

function mapDispatchToProps(dispatch) {
	return {
		getContentCard: function getContentCard() {
			dispatch((0, _contentcard_action.getContentCard)());
		}
	};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ContentCard);