{"version":3,"sources":["shared/actions/login_action.js"],"names":["handleLogin","handleLoginError","fetchLogin","handleForgetPassword","fetchForgetPassword","LOGIN","FORGETPASSWORD","ERROR","res","type","payload","err","message","email","password","url","liveURL","dispatch","state","fetch","method","headers","Accept","body","JSON","stringify","then","json","catch"],"mappings":";;;;;;;;;QAMgBA,W,GAAAA,W;QAQAC,gB,GAAAA,gB;QAQAC,U,GAAAA,U;QA0BAC,oB,GAAAA,oB;QAQAC,mB,GAAAA,mB;;AArDhB;;;;;;AAHO,IAAMC,wBAAQ,OAAd;AACA,IAAMC,0CAAiB,gBAAvB;AACA,IAAMC,wBAAQ,OAAd;;;AAGP;AACO,SAASP,WAAT,CAAqBQ,GAArB,EAA0B;AAC/B,SAAO;AACLC,UAAMJ,KADD;AAELK,aAASF;AAFJ,GAAP;AAID;;AAED;AACO,SAASP,gBAAT,CAA0BU,GAA1B,EAA+B;AACpC,SAAO;AACLF,UAAMF,KADD;AAELK,aAASD;AAFJ,GAAP;AAID;;AAED;AACO,SAAST,UAAT,CAAoBW,KAApB,EAA2BC,QAA3B,EAAqC;AAC1C,MAAMN,MAAM;AACVK,gBADU;AAEVC;AAFU,GAAZ;AAIA,MAAMC,MAAS,oBAAUA,GAAV,CAAcC,OAAvB,eAAN;AACA,SAAO,UAACC,QAAD,EAAWC,KAAX;AAAA,WACLC,MAAMJ,GAAN,EAAW;AACTK,cAAQ,MADC;AAETC,eAAS;AACPC,gBAAQ,oCADD;AAEP,wBAAgB;AAFT,OAFA;AAMTC,YAAMC,KAAKC,SAAL,CAAejB,GAAf;AANG,KAAX,EAQGkB,IARH,CAQQ;AAAA,aAAOlB,IAAImB,IAAJ,EAAP;AAAA,KARR,EASGD,IATH,CASQ,UAAClB,GAAD,EAAS;AACb,UAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,eAAOS,SAASjB,YAAYQ,GAAZ,CAAT,CAAP;AACD;AACD,aAAOS,SAAShB,iBAAiBO,GAAjB,CAAT,CAAP;AACD,KAdH,EAeGoB,KAfH,CAeS;AAAA,aAAOX,SAAShB,iBAAiBO,GAAjB,CAAT,CAAP;AAAA,KAfT,CADK;AAAA,GAAP;AAiBD;;AAED;AACO,SAASL,oBAAT,CAA8BK,GAA9B,EAAmC;AACxC,SAAO;AACLC,UAAMH,cADD;AAELI,aAASF;AAFJ,GAAP;AAID;;AAED;AACO,SAASJ,mBAAT,CAA6BS,KAA7B,EAAoC;AACzC,MAAML,MAAM;AACVK;AADU,GAAZ;AAGA,SAAO,UAACI,QAAD,EAAWC,KAAX;AAAA,WACLC,MAAS,oBAAUJ,GAAV,CAAcC,OAAvB,2BAAsD;AACpDI,cAAQ,MAD4C;AAEpDC,eAAS;AACPC,gBAAQ,oCADD;AAEP,wBAAgB;AAFT,OAF2C;AAMpDC,YAAMC,KAAKC,SAAL,CAAejB,GAAf;AAN8C,KAAtD,EAQGkB,IARH,CAQQ;AAAA,aAAOlB,IAAImB,IAAJ,EAAP;AAAA,KARR,EASGD,IATH,CASQ,UAAClB,GAAD,EAAS;AACb,UAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,eAAOS,SAASd,qBAAqBK,GAArB,CAAT,CAAP;AACD;AACD,aAAOS,SAAShB,iBAAiBO,GAAjB,CAAT,CAAP;AACD,KAdH,EAeGoB,KAfH,CAeS;AAAA,aAAOX,SAAShB,iBAAiBO,GAAjB,CAAT,CAAP;AAAA,KAfT,CADK;AAAA,GAAP;AAiBD;;;;;;;;gCA7EYH,K;;gCACAC,c;;gCACAC,K;;gCAIGP,W;;gCAQAC,gB;;gCAQAC,U;;gCA0BAC,oB;;gCAQAC,mB","file":"login_action.js","sourceRoot":"/home/b-rave/Documents/jalaj/Frontend-Development","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const FORGETPASSWORD = 'FORGETPASSWORD';\nexport const ERROR = 'ERROR';\nimport variables from '../../variables';\n\n// sending received response from backend to reducer function\nexport function handleLogin(res) {\n  return {\n    type: LOGIN,\n    payload: res,\n  };\n}\n\n// to handle error recieved\nexport function handleLoginError(err) {\n  return {\n    type: ERROR,\n    message: err,\n  };\n}\n\n// sending post request to backend for login request\nexport function fetchLogin(email, password) {\n  const res = {\n    email,\n    password,\n  };\n  const url = `${variables.url.liveURL}/api/login`;\n  return (dispatch, state) =>\n    fetch(url, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json , text/plain, */*',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(res),\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          return dispatch(handleLogin(res));\n        }\n        return dispatch(handleLoginError(res));\n      })\n      .catch(err => dispatch(handleLoginError(res)));\n}\n\n// sending forgetpassword data to reducer\nexport function handleForgetPassword(res) {\n  return {\n    type: FORGETPASSWORD,\n    payload: res,\n  };\n}\n\n// sending post request to handle forget password request\nexport function fetchForgetPassword(email) {\n  const res = {\n    email,\n  };\n  return (dispatch, state) =>\n    fetch(`${variables.url.liveURL}/api/forgot_password`, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json , text/plain, */*',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(res),\n    })\n      .then(res => res.json())\n      .then((res) => {\n        if (typeof res === 'object') {\n          return dispatch(handleForgetPassword(res));\n        }\n        return dispatch(handleLoginError(res));\n      })\n      .catch(err => dispatch(handleLoginError(res)));\n}\n"]}