{"version":3,"sources":["shared/components/DemoApp/AsyncCounterRoute/CounterRoute.js"],"names":["CounterRoute","props","incrementCounter","bind","state","counter","setState"],"mappings":";;;;;;;;;AACA;;;;;;;;;;+eADA;;;IAGMA,Y;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAEjB,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;AACA,UAAKC,KAAL,GAAa,EAAEC,SAAS,CAAX,EAAb;AAHiB;AAIlB;;;;uCAEkB;AACjB,WAAKC,QAAL,CAAc,EAAED,SAAS,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAAhC,EAAd;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAFF;AAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkB,eAAKD,KAAL,CAAWC;AAD7B,SARF;AAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,cAAQ,SAAS,KAAKH,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAXF,OADF;AAiBD;;;;;;eAGYF,Y;;;;;;;;;gCAhCTA,Y","file":"CounterRoute.js","sourceRoot":"/home/spineor/Documents/risorso /newSetup_frontend/risorso","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React, { Component } from 'react';\n\nclass CounterRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.state = { counter: 0 };\n  }\n\n  incrementCounter() {\n    this.setState({ counter: this.state.counter + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Counter</h3>\n        <p>\n          <em>\n            This is a small demo component that contains state.  It's useful for\n            testing the hot reloading experience of an asyncComponent.\n          </em>\n        </p>\n        <p>\n          Current value: {this.state.counter}\n        </p>\n        <p>\n          <button onClick={this.incrementCounter}>Increment</button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default CounterRoute;\n"]}