'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetch = fetch;
/* eslint-disable import/prefer-default-export */

function fetching(id) {
  return { type: 'FETCHING_POST', payload: id };
}

function fetched(post) {
  return { type: 'FETCHED_POST', payload: post };
}

function fetch(id) {
  return function (dispatch, getState, _ref) {
    var axios = _ref.axios;

    dispatch(fetching(id));

    return axios.get('https://jsonplaceholder.typicode.com/posts/' + id).then(function (_ref2) {
      var data = _ref2.data;
      return dispatch(fetched(data));
    })
    // We use 'react-jobs' to call our actions.  We don't want to return
    // the actual action to the 'react-jobs' withJob as it will cause
    // the data to be serialized into the react-jobs state by the server.
    // As we already have the state in the redux state tree, which is also
    // getting serialized by the server we will just return a simple "true"
    // here to indicate to react-jobs that all is well.
    .then(function () {
      return true;
    });
  };
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(fetching, 'fetching', '/home/spineor/Documents/risorso /newSetup_frontend/risorso/shared/actions/posts.js');

  __REACT_HOT_LOADER__.register(fetched, 'fetched', '/home/spineor/Documents/risorso /newSetup_frontend/risorso/shared/actions/posts.js');

  __REACT_HOT_LOADER__.register(fetch, 'fetch', '/home/spineor/Documents/risorso /newSetup_frontend/risorso/shared/actions/posts.js');
}();

;